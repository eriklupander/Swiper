precision mediump float;

uniform sampler2D sTexture;
uniform float amount;
uniform vec3 uLightPos; // Light position

varying vec2 vTextureCoord;
varying vec3 vNormal;
varying vec3 vPosition; // Interpolated fragment position

void main() {
  float distance = length(uLightPos - vPosition);
  vec3 lightVector = normalize(uLightPos - vPosition);
  float diffuse = max(dot(vNormal, lightVector), 0.1);
  
  vec4 color =  texture2D(sTexture, vTextureCoord) * diffuse;
  color[3] = ((vTextureCoord[1])/amount)-0.07;
  gl_FragColor = color;
}